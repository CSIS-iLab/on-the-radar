// Rem output with px fallback
@mixin font-size($size) {
  font-size: $size; //Fallback in px
  font-size: calculate-rem($size);
}

// Center block
@mixin center-block {
  display: block;
  margin-right: auto;
  margin-left: auto;
}

// Clearfix
@mixin clearfix() {
  content: '';
  display: table;
  table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
  clear: both;
}

// Breakpoints
$breakpoint-xlarge: 90em;
$breakpoint-large: 62em;
$breakpoint-medium: 48em;
$breakpoint-small: 36em;
$breakpoint-xsmall: 25em;

@mixin breakpoint($break) {
  @if $break==xlarge {
    @media screen and (min-width: $breakpoint-xlarge) {
      @content;
    }
  }
  @else if $break==large {
    @media screen and (min-width: $breakpoint-large) {
      @content;
    }
  }
  @else if $break==medium {
    @media screen and (min-width: $breakpoint-medium) {
      @content;
    }
  }
  @else if $break==small {
    @media screen and (min-width: $breakpoint-small) {
      @content;
    }
  }
  @else if $break==xsmall {
    @media screen and (max-width: $breakpoint-xsmall) {
      @content;
    }
  }
  @else {
    @media screen and (min-width: $break) {
      @content;
    }
  }
}

// Box Shadow
/* @include box-shadow(1px,1px,1px,0, #fff, true); */

@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {
  @if $inset {
    box-shadow: inset $top $left $blur $size $color;
  }
  @else {
    box-shadow: $top $left $blur $size $color;
  }
}

// Extend Background to full width of window
@mixin full-width-background ( $background ) {
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 0;
    display: block;
    width: 100vw;
    height: 100%;
    background-color: $background;
  }

  &::before {
    right: calc(100% - 1px);
  }

  &::after {
    left: calc(100% - 1px);
  }
}
