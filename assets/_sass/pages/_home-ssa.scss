.home__ssa {
  position: relative;
  right: 50%;
  left: 50%;
  display: grid;
  width: 100vw;
  margin-right: -50vw;
  margin-left: -50vw;
  padding-top: 10vh;
  padding-bottom: 20vh;
  background: rgb(10, 17, 23);
  /* prettier-ignore */
  background: linear-gradient(0deg, rgba(10, 17, 23, 1) 50%, rgba(17, 17, 17, 1) 60%);

  @include breakpoint('medium') {
    min-height: 80vh;
  }

  .section__content {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    align-self: center;
    max-width: 80%;
    margin: 0 auto;
  }

  .section__bg {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
  }

  .section__title {
    position: relative;

    &::after {
      content: '';
      display: block;
      width: 80%;
      height: 1px;
      margin: 1rem auto;
      background-color: $color__white;
      opacity: 0.6;

      @include breakpoint('medium') {
        width: 280px;
      }
    }
  }

  .home__ssa-desc {
    color: $color__white;
    font-family: $font__lato;
    @include font-size(22px);
    line-height: 2;
    text-align: center;

    @include breakpoint('medium') {
      max-width: $home__content-width;
      margin: 0 auto;
      @include font-size(26px);
    }
  }

  .vocab {
    position: relative;
    display: inline-block;
    margin: 0 0.5rem;
    padding: 0 16px 2px;
    color: $color__white;
    font-weight: bold;
    line-height: 1.6;
    text-align: center;
    background-color: $color__orange;
    border: 0;
    border-radius: 50vh;
    box-shadow: 0 0 0 rgba(0, 0, 0, 0), 0 0 0 rgba(0, 0, 0, 0);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
  }
}

@for $i from 1 through 4 {
  .vocab:nth-of-type(#{$i}) {
    // Delay the animation. Delay increases as items loop.
    background-color: transparent;
    transition: background-color 500ms ease-in-out, box-shadow 500ms ease-in-out;
    transition-delay: $i * (300ms);
  }
}

.js-is-visible .vocab {
  background-color: $color__orange;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

.tippy-tooltip.otr-theme {
  color: #000;
  line-height: 1;
  background-color: #fff;

  @include breakpoint('medium') {
    color: #fff;
    background-color: transparent;
  }
}

.tippy-tooltip .definition {
  line-height: 1.4;
  @include font-size(16px);
}

.tippy-tooltip.otr-theme[data-animatefill] {
  background-color: transparent;
}

.tippy-tooltip.otr-theme .tippy-backdrop {
  background-color: transparent;
}

@for $i from 1 through 50 {
  .def-text span:nth-of-type(#{$i}) {
    // Delay the animation. Delay increases as items loop.
    opacity: 0;
    animation: reveal 100ms linear alternate 1 forwards;
    animation-delay: 500ms + ($i * (50ms));
  }
}

@keyframes reveal {
  to {
    opacity: 1;
  }
}

$tippybg: #ddd;

@keyframes grow {
  0% {
    width: 16px;
    background-color: $tippybg;
  }

  70% {
    width: 16px;
    background-color: $tippybg;
  }

  100% {
    width: 170px;
    background-color: rgba($tippybg, 0.85);
  }
}

.definition {
  width: 200px;
  padding: 1rem;
}

.def-text {
  width: 170px;
  min-height: 16px;
  overflow-x: hidden;
  background-color: rgba($tippybg, 0.85);
  background-image: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff),
    linear-gradient(#fff, #fff), linear-gradient(#fff, #fff);
  background-repeat: no-repeat;
  // ^^^ This value should be equal to width of left OR right border.
  background-position: top left, top right, bottom left, bottom right;
  background-size: 8px 3px;
  border: solid #fff;
  border-width: 0 3px;
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  animation: grow 500ms linear alternate 1 forwards;
}

.def-text-inner {
  position: relative;
  display: block;
  width: 170px;
  padding: 12px;
  color: #000;
}
